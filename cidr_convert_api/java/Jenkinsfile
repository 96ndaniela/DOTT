 
pipeline {
    agent any
    stages {
        stage('one') {
            agent any
            steps {
                dir("cidr_convert_api/java/"){
                    sh 'pwd'
                    sh 'ls'
                    sh 'chmod +x build.sh'
                    sh './build.sh'
            }
            }
        }
        stage('sonarcloud'){
            // agent any
            steps{
                script { env.SONAR_TOKEN="823c288ab7a9a14f75cd2597c417ec3eef8602a2" }
                dir("cidr_convert_api/java/cidr-api/"){
                sh 'mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar'}
            }   
        }
        stage('unit test'){
            // agent any
            steps{
                dir("cidr_convert_api/java/cidr-api/")
                {
                sh 'mvn clean test'
                }
            
                script {
                    try {
                    junit 'target/surefire-reports/TEST-*.xml'
                    } catch (Exception e) {
                    echo 'keep going'
                    }
                }      
            }
         }
        stage('docker and deploy'){
            // agent { dockerfile true }
            steps{
             sh 'echo "it continues"' 
                // script {
                    // def customImage = docker.build("my-image:${env.BUILD_ID}")
                    // customImage.push() */
                //}
            
            }

        }

      }
}



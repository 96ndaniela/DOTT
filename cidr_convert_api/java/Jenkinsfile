pipeline { // start
	agent any
	environment { // starts environment: needed for sonarcloud and security without token at sight
		SONAR_TOKEN = credentials("sonarcloud")
	} // ends environment
	stages { // start stage 
		stage('step one: building') { // build the environment only
			steps { // start steps
				dir("cidr_convert_api/java/cidr-api") { // within directory, you'll do...
					script { // start script
						sh 'pwd'
						sh 'mvn package'
						} // end script
					}// end in the directory
				} // end steps
			} // end stage one

		stage('step two: analysis') { // analysis of java code with sonarcloud through token utilized within the environment
			steps { // start steps 
				dir("cidr_convert_api/java/cidr-api/") { // within the directory
				sh 'pwd'
				sh 'mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar' } // end directory
				} // end of steps
			} // end of stage

		stage('step three: linting') { // linting process used through org.maven.plugins, which has the Programming Mistake Detector
			steps { // start steps 
				dir("cidr_convert_api/java/cidr-api/") { // within directory
				sh 'pwd'
				sh 'mvn pmd:pmd' } // end directory
				dir("cidr_convert_api/java/cidr-api/target") { //within this directory that now has the linting report
				sh 'cat pmd.xml' }  // this part is only to show what the errors are within java itself
				} // end of steps
			} // end of stage
			
		stage('step four: unit test') { // start stage
			steps { // start steps
				dir("cidr_convert_api/java/cidr-api/") { // within directory
				sh 'mvn clean test' // makes sure the 'cache' is clean, for all units
				sh 'mvn test'
				} // end directory
				
					script { // start script
					try { // specific java unit tests 
						junit 'target/surefire-reports/TEST-*.xml'	
   					} catch (Exception e) {
      					echo 'still connecting' // so it skips, because it's all a fail
  						} // close of exception
					} // end of script
				} // end of steps
			} // end stage
			
			stage('step five: deployment') { // start of stage
				steps { // start steps
					dir("cidr_convert_api/java/cidr-api/") { // within directory
					sh 'echo "deployment of the cidr-api!"'
					sh 'pwd'
					sh 'mvn package'
					sh 'java -cp target/cidr-api-1.0-SNAPSHOT-jar-with-dependencies.jar com.dott.App'
					} // end the directory
					sh 'mvn deploy' 
					
                		} // end steps
			} // end stage five
    } // end stages
} // end pipeline
  

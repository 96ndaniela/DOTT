pipeline {
	agent any
	environment {
		SONAR_TOKEN = credentials("sonarcloud")
	}
	stages {
		stage('building') {
			steps {
				dir("cidr_convert_api/java/cidr-api") {
					script {
						sh 'pwd'
						sh 'mvn package'
						}
					}	
				}
			} 

		stage('code check') {
			steps {
				dir("cidr_convert_api/java/cidr-api/") {
				sh 'pwd'
				sh 'mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar' } 
				}
			}
			
		stage('test') {
			steps {
				dir("cidr_convert_api/java/cidr-api/") 
				{ sh 'mvn test'}
					script {
					try {
						junit 'target/surefire-reports/TEST-*.xml'	
   					} catch (Exception e) {
      					echo 'still connecting'
  						}
					}
				}
			}
			
			stage('Docker') {
				steps {
					sh 'echo "next stage"'
     
  }
   
				}
		stage('sonarcloud') {
  environment {
    SCANNER_HOME = tool 'sonarqubescanner'
    ORGANIZATION = "96ndaniela"
    PROJECT_NAME = "96ndaniela_DOTT"
  }
  steps {
    withSonarQubeEnv('sonarcloud') {
        sh '''$SCANNER_HOME/bin/sonar-scanner -Dsonar.organization=$ORGANIZATION \
        -Dsonar.java.binaries=build/classes/java/ \
        -Dsonar.projectKey=$PROJECT_NAME \
        -Dsonar.sources=.'''
    }
  }
}
			
    }
}
 
